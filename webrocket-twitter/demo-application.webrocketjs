console.log("Twitter script started");

var personAmount = 6;
var selectedPerson;

var clock = new THREE.Clock();

// JSON setup
var jsonLoaded = false;
var jsonObjects = [];
$.getJSON("https://dl.dropboxusercontent.com/u/60485425/Playsign/GitHub/wex-experiments/webrocket-twitter/tweets.json", {
	include_entities: "true",
	include_rts: "true", //retweets
}, function(data) {
	$.each(data, function(i, item) {
		jsonObjects.push(item);
	});
}).done(function(json) {
	console.log("JSON success");
	jsonLoaded = true;
})
	.fail(function(jqxhr, textStatus, error) {
	var err = textStatus + ', ' + error;
	console.log("JSON fail: " + err);
});

var widgets = [];

var threePersons = [];
var meshmoonPersons = [];


// Create persons
for (var i = 0; i < 6; i++) {
	// create local entity
	var ent = meshmoon.scene.createLocalEntity(["Placeable", "Name", "Mesh"]);

	// placeable
	ent.placeable.setPosition(i * 2, 0, -10);
	ent.placeable.setScale(0.1, 0.1, 0.05);

	// name
	ent.setName("Person");

	// mesh
	ent.mesh.setMesh("https://dl.dropboxusercontent.com/u/60485425/Playsign/GitHub/wex-experiments/webrocket-twitter/fig1.mesh");
	ent.mesh.setMaterial(["https://dl.dropboxusercontent.com/u/60485425/Playsign/GitHub/wex-experiments/webrocket-twitter/fig1.material"]);

	meshmoonPersons.push(ent);
}

// Hook to events
meshmoon.client.onUpdate(null, onUpdate);
meshmoon.input.onMouseClick(null, onMouseClick);

// 2D widgets to show tweets
function initWidgets() {
	for (var i = 0; i < personAmount; i++) {
		newWidget = $("<div/>");
		newWidget.attr("id", "twitter");
		newWidget.css({
			"background-color": "rgba(255,255,255,0.7)",
			"color": "rgb(80,80,80)",
			"border": "1px solid rgba(200,200,200,0.7)",
			"font-size": 12,
			"border-radius": 6,
			"position": "absolute",
			"top": 0,
			"padding": 10,
			"margin": 10,
			"width": 250
		});

		meshmoon.ui.addWidgetToScene(newWidget);
		widgets.push(newWidget);

		setWidgetText(i);
	}
}

// Fill three.js object array
function initThreePersonArray() {
	// console.log("init person array");
	meshes = meshmoon.renderer.getAllMeshes();

	for (var i = 0; i < meshes.length; i++) {
		if (meshes[i].name == "https://dl.dropboxusercontent.com/u/60485425/Playsign/GitHub/wex-experiments/webrocket-twitter/fig1.mesh_submesh_0") {
			meshes[i].rotate = false;
			threePersons.push(meshes[i]);
		}
	}
}

function onUpdate() {
	if (jsonLoaded && meshmoon.scene.entities[0].script.scriptAsset.isLoaded) { // App
		if (threePersons.length == 0) {
			initThreePersonArray();
			initWidgets();
		} else {
			for (var i = 0; i < widgets.length; i++) {
				setWidgetPosition(i);
			}

			// Rotate the selected person
			if (selectedPerson) {
				var y = (100 * clock.getDelta() + selectedPerson.rotation.y) % 360;
				var vector = new THREE.Vector3(0, y, 0);

				selectedPerson.rotation = vector;
			}
		}
	}
}

function onMouseClick(event) {
	if (event.leftDown) {
		var x = (event.x / meshmoon.client.renderer.windowSize.width) * 2 - 1;
		var y = -(event.y / meshmoon.client.renderer.windowSize.height) * 2 + 1;
		var vector = new THREE.Vector3(x, y, 1);
		projector.unprojectVector(vector, meshmoon.client.renderer.camera);
		var ray = new THREE.Raycaster(meshmoon.client.renderer.camera.position, vector.sub(meshmoon.client.renderer.camera.position).normalize());
		var intersects = ray.intersectObjects(threePersons);

		if (intersects.length > 0) {
			// Person selected. Rotate / change the widget text

			for (var i = 0; i < threePersons.length; i++) {
				if (threePersons[i] == intersects[0].object) {
					selectedPerson = intersects[0].object;

					setWidgetText(i);
				}
			}
		}
	}
}

// Calculate and set widget position
function setWidgetPosition(i) {
	var p, v, percX, percY, left, top;

	// this will give us position relative to the world
	p = new THREE.Vector3(meshmoonPersons[i].placeable.attributes.transform.pos.x, meshmoonPersons[i].placeable.attributes.transform.pos.y + 1, meshmoonPersons[i].placeable.attributes.transform.pos.z);

	// projectVector will translate position to 2d
	projector = new THREE.Projector();
	v = projector.projectVector(p, meshmoon.client.renderer.camera);

	// translate our vector so that percX=0 represents
	// the left edge, percX=1 is the right edge,
	// percY=0 is the top edge, and percY=1 is the bottom edge.
	percX = (v.x + 1) / 2;
	percY = (-v.y + 1) / 2;

	// scale these values to our viewport size
	x = percX * meshmoon.client.renderer.windowSize.width;
	y = percY * meshmoon.client.renderer.windowSize.height;

	// calculate distance between the camera and the person. Used for fading the tooltip
	var distance = meshmoonPersons[i].placeable.attributes.transform.pos.distanceTo(meshmoon.client.renderer.camera.position);
	var distance = 2 / distance;

	widgets[i].css({
		left: x,
		top: y,
		opacity: distance
	});
}

function setWidgetText(i) {
	threePersons[i].rotate = !threePersons[i].rotate;

	var name, text, location, description, text;

	if (threePersons[i].rotate) {
		name = jsonObjects[0][i].user.name;
		location = jsonObjects[0][i].user.location;
		description = jsonObjects[0][i].user.description;

		text = "Name: " + name + "<br>Location: " + location + "<br>" + description;
		widgets[i].html(text);
	} else {
		text = "@" + jsonObjects[0][i].user.screen_name + ": " + jsonObjects[0][i].text;

		widgets[i].html(text);
	}
}

function onScriptDestroyed() {
	for (var i = 0; i < widgets.length; i++) {
		widgets[i].remove();
		widgets = null;
	}
}